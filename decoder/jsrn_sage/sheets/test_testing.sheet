### Test random_error 
# Assert that all are of correct weight.
F = GF(17)
n = 16
nerrs = 8
assert all( [ weight(random_error(n, F, nerrs))==nerrs for i in range(1000) ]) , "Not all generated vectors of correct weight"

# Assert that all position occur reasonably often (will sometimes randomly fail)
N = 1000
freqs = { i: 0 for i in range(16) }
for i in range(N):
    e = random_error(16, F, nerrs)
    for j in support(e):
        freqs[j] += 1
median = float(N*nerrs/n)
assert all( .8*median <= freq and freq <= 1.2*median for freq in freqs.values() )

# Assert that all error values occur equally often
freqs = { a: 0 for a in F if not a.is_zero()}
for i in range(N):
    e = random_error(16, F, nerrs)
    for j in support(e):
        freqs[e[j]] += 1
median = float(N*nerrs/F.cardinality())
assert all( .8*median <= freq and freq <= 1.3*median for freq in freqs.values() )
